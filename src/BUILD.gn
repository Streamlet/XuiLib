config("xuilib_public_config") {
  include_dirs = [ "../include" ]
}

static_library("xuilib") {
  sources = [
    "../include/xui/graph/color.h",
    "../include/xui/graph/image.h",
    "../include/xui/graph/point.h",
    "../include/xui/graph/rect.h",
    "../include/xui/graph/size.h",
    "../include/xui/renderer/renderer.h",
    "../include/xui/utility/app_util.h",
    "../include/xui/utility/string.h",
    "../include/xui/window/child_window.h",
    "../include/xui/window/message.h",
    "../include/xui/window/root_window.h",
    "../include/xui/window/window.h",
    "../include/xui/xuilib.h",
    "window/child_window.cc",
    "window/window.cc",
  ]

  if (is_win) {
    sources += [
      "renderer/gdi_renderer_win.cc",
      "renderer/gdi_renderer_win.h",
      "utility/app_util_win.cc",
      "utility/graph_util_win.cc",
      "utility/graph_util_win.h",
      "window/native_window_base_win.cc",
      "window/native_window_base_win.h",
      "window/native_window_win.cc",
      "window/native_window_win.h",
      "window/root_window_win.cc",
      "window/thunk_win.h",
      "window/tls_win.cc",
      "window/tls_win.h",
    ]
  }

  if (is_mac) {
    sources += [
      "utility/app_util_mac.mm",
      "window/native_window_mac.h",
      "window/native_window_mac.mm",
      "window/ns_native_window_mac.h",
      "window/ns_native_window_mac.mm",
      "window/root_window_mac.cc",
    ]
  }

  libs = [
    "msimg32.lib",
    "gdiplus.lib",
  ]

  public_configs = [ ":xuilib_public_config" ]
}
